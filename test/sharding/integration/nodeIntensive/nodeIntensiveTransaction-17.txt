#This tests the sort filter
A||start
B||start
C||start
A||insert||{"body": "aaaaaa 111111 zzzzzz  There are different ways to tackle it, you can use ATI commands in .Net for this purpose and use GsmComm.dll library to send message, also PDU knowledge is required, you can also see a ready made  library  its name is rapidsmsserver and can ask them how did they implement it or if they could give you some developer license free of cost so you can use it in .net and study it. I dont know much about it, and you can also see many other ready made libraries because most of ATI commands are no more working. \n", "last_activity_date": "04/20/2012", "accepted_answer_id": "0", "creation_date": "04/20/2012", "votes_count": 1, "last_edit_date": "01/01/1970", "id": "2", "favorite_count": 0, "last_editor_display_name": "", "closed_date": "01/01/1970", "view_count": 0, "title": "send and receive SMS and developing a SMS panel", "parent_id": "7976753", "comment_count": 0, "score": 1, "last_editor_user_id": "0", "post_type_id": "2", "community_owned_date": "01/01/1970", "tags": "", "answer_count": 0, "author_name": "Muhammad Atif Agha", "owner_user_id": "727794"}||"rid":"2","status":true
A||insert||{"body": "aaaaaa 111111 zzzzzz  If you don&#39t need the header, set  CURLOPT_HEADER  to  false . \n", "last_activity_date": "04/22/2012", "accepted_answer_id": "0", "creation_date": "04/22/2012", "votes_count": 4, "last_edit_date": "01/01/1970", "id": "3", "favorite_count": 0, "last_editor_display_name": "", "closed_date": "01/01/1970", "view_count": 0, "title": "parse XML from curl POST response", "parent_id": "10266742", "comment_count": 1, "score": 3, "last_editor_user_id": "0", "post_type_id": "2", "community_owned_date": "01/01/1970", "tags": "", "answer_count": 0, "author_name": "lafor", "owner_user_id": "1341059"}||"rid":"3","status":true
A||insert||{"body": "aaaaaa 111111 zzzzzz  JSON is not really meant for serializing arbitrary Python objects.  It&#39s great for serializing  dict  objects, but the  pickle  module is really what you should be using in general.  Output from  pickle  is not really human-readable, but it should unpickle just fine.  If you insist on using JSON, you could check out the  jsonpickle  module, which is an interesting hybrid approach. \n\n  https://github.com/jsonpickle/jsonpickle  \n", "last_activity_date": "04/20/2012", "accepted_answer_id": "0", "creation_date": "04/20/2012", "votes_count": 2, "last_edit_date": "01/01/1970", "id": "1", "favorite_count": 0, "last_editor_display_name": "", "closed_date": "01/01/1970", "view_count": 0, "title": "Serializing python object instance to JSON", "parent_id": "10252010", "comment_count": 0, "score": 2, "last_editor_user_id": "0", "post_type_id": "2", "community_owned_date": "01/01/1970", "tags": "", "answer_count": 0, "author_name": "Brendan Wood", "owner_user_id": "126751"}||"rid":"1","status":true
A||nodeCount||3
B||nodeCount||3
C||nodeCount||3
A||merge
A||checkOrder||q=aaaaaa&sort=votes_count&orderby=asc||2 1 3
B||checkOrder||q=aaaaaa&sort=votes_count&orderby=asc||2 1 3
C||checkOrder||q=aaaaaa&sort=votes_count&orderby=asc||2 1 3
A||kill
B||kill
C||kill
