#
# Configuration file for SRCH2 search server. Please email
# contact@srch2.com if you have questions.
#
# In this documment, "attribute" and "field" are used interchangeably.
#

# Index type.
#  0: Text Index
#  1: Geo+Text Index
# REQUIRED
index-type=0
#index-type=1 # Use this line instead of the previous line for geo search

# REQUIRED if index-type=1
# Need to be float type in the json objects in the data file
attribute-latitude=IGNORE
attribute-longitude=IGNORE

#attribute-latitude=lat # Use these 2 lines instead of the previous 2 for geo search
#attribute-longitude=lng

####################### Parameters on local filesystem ###############

# License key file. Email contact@srch2.com to get a key file.  
# Make sure to set the variable to the SRCH2 license key file
# REQUIRED.
license-file=srch2_license_key.txt

# Flag to indicate whether we want to create indexes from a data file
# or load them from existing serialized files.
# 0 - Create the indexes from a data file;
# 1 - Load indexes from existing serialized files.
# OPTIONAL. Defaults to 0
index-load-or-create=0

# Path for a data file to be loaded. The file must be in the json format.
# REQUIRED, when "index-load-or-create" is set to 0.
data-file-path=sample-data.json
 
# The file path to the folder where we store serialized index files.
# REQUIRED, when "index-load-or-create" is set to 1.
index-dir-path=./

# Path to the log file.  Notice that the time in the log file is UTC time.
# REQUIRED.
access-log-file=log.txt

# Primary key attribute of the data
# REQUIRED
primary-key=id

# Flag to indicate whether the primary key is searchable.
# 0 - NO
# 1 - YES
# OPTIONAL. Default value is 0
is-primary-key-searchable=0	

# Attributes we want to search on in addition to the primary key. Specify them
# as comma separated entries, e.g., title,name,address,affiliation.
# NOTE: Searchable attributes are considered to be of type TEXT.
# REQUIRED
attributes-search=name,category

# Default values for attributes-search. If a searchable attribute are null or empty string they will be 
# replaced with these values before indexing. Specify them
# as comma separated entries, e.g., "Default1","Default2","Default3"
# OPTIONAL
# e.g.  attributes-search-default="John Smith","Book"
attributes-search-default=IGNORE

# If a searchable attribute is required it cannot be null in data. An error is thrown if a null value
# occurs for a required attribute. 
# Specify 1 for required attributes and 0 for non-required ones.
# OPTIONAL, all attributes are nonrequired in default
# e.g. attributes-search-required=1,0
attributes-search-required=IGNORE

# Non-searchable attributes are not indexed and keyword search is not performed on them. These attributes can be
# used with range queries to prune the results of a keyword search.
# Specify them as comma separated entries, e.g., sell_date, price, weight   
# Note: These attributes can have overlap with searchable attributes. This means an attribute can be both searchable and non-searchable.
# OPTIONAL
# e.g. non-searchable-attributes=sell_date,price,weight,name
non-searchable-attributes=IGNORE
       
# Available types for non-searchable attributes are:
# positive integer, float, time (which covers time and date), text
# REQUIRED if non-searchable attributes are provided.
#e.g. non-searchable-attributes-types=time,int,float,text
non-searchable-attributes-types=IGNORE


# Default values of the attributes used to sort the results.
# REQUIRED if non-searchable attributes are provided.
# e.g. non-searchable-attributes-default="1/1/1970",50,1.5,"Mark"
non-searchable-attributes-default=IGNORE


# Flag to indicated whether non-searchable-attributes should be used to sort the final results.
# 0 - NO
# 1 - YES
# OPTIONAL, default is 0
# e.g. non-searchable-attributes-sort=0,1,1,0
non-searchable-attributes-sort=IGNORE


# Default attribute to sort the results. It is used if not specified in query.
# Specify the name of the attribute. It must be in the list of 
# non-searchable-attributes and set to sortable in non-searchable-attributes-sort
# REQUIRED if any of the non-searchable-attributes is sortable (set 1 in non-searchable-attributes-sort).
# default-attribute-to-sort=price
default-attribute-to-sort=IGNORE



# Flag to indicate whether the attribute-based search is supported.
# 0 - NO
# 1 - YES
# Note that to support attribute-based search, the number of searchable attributes cannot be bigger than 31.
support-attribute-based-search=0

# Attribute used as the boost value of a record
# Need to be float type in the json objects in the data file
attribute-record-boost=relevance

#
# The following comments and parameters are related to ranking.  
# Please see http://www.srch2.com/download.html for ranking-related information

#record-score-expression=doc_boost+(1/(doc_length+1))
record-score-expression=idf_score*doc_boost

# Penalty for a prefix match.  This value is used to multiply the
# score of record for a term.
# default value = 0.95
prefix-match-penalty=0.95

# Boost values for searchable attributes.  A boost value is in the
# range [1,100].  If the value is outside the range, it will be set to
# 100.  Specify the boost values as comma separated entries. For
# example, the boosts for four searchable attributes can be specified
# as 10,35,55,15.
#
# OPTIONAL.  
attribute-boosts=2,1

# Default query term boost
# OPTIONAL. Defaults to 1
#default-query-term-boost=1

# Default query term similarity boost
# OPTIONAL. Defaults to 0.5
#default-query-term-similarity-boost=0.9

# Default query term similarity boost
# OPTIONAL. Defaults to 0.5
#default-query-term-length-boost=0.5

# Format of each json search response.
#  0: format "rid,edit_dist,matching_prefix,in_memory_record";
#  1: format "rid,edit_dist,matching_prefix".
#  2: format "rid,edit_dist,matching_prefix,attributes_to_return".
# OPTIONAL. Its default value is 0.
search-response-format=0

# REQUIRED if search-response-format=2
# These are attributes returned to the user.
# Set it to IGNORE if no attributes is wanted.
attributes-to-return=lat,lng

# Default type of matching query terms
#  0: exact match
#  1: fuzzy match
# OPTIONAL. Its default value is 0.
default-query-term-match-type=0

# Default type for query terms.
#  0: a term is treated as a prefix;
#  1: a term is treated as a complete term;
# OPTIONAL. Its default value is 0.
default-query-term-type=0

# Number of results to retrieve
# OPTIONAL. Its default value is 10.
default-results-to-retrieve=10



######################### For real-time updates ########################
# The number of seconds after which newly inserted/deleted records
# are merged into the indexes.  Its minimum value is 10 (seconds).
merge-every-n-seconds=15

# The number of write operations after which newly inserted and deleted records
# are "merged" into the indexes.
merge-every-m-writes=100

########################## HTTP server options ################################
# Hostname and port number of the server. Make sure the port is open. 
# REQUIRED
listening-hostname=127.0.0.1
listening-port=8081

# Number of bytes in the cache. It should be in the range [50MB, 500MB].
# OPTIONAL. Its default value is 50MB.
cache-size=104857600

# Number of threads that serve the requests.
# OPTIONAL. Its default value is 1.
number-of-threads=2

# Maximum number of records that can be inserted into the engine.
# The number depends on the size of each record and the available memory
doc-limit=15000000

##################### Do NOT change the following parameters ###########################

# 1 - File BootStrap True - Import data from json file at file path "file-path".
# 0 - File bootstrap False
# OPTIONAL. Its default value is 1
data-source-type=1

# OPTIONAL. Defaults to 0
write-api-type=0
