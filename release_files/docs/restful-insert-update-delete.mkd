
<table style="width:100%;table-layout:fixed" ><tr>
	
<td id="sideBarTd" style="width:25%"> 

<div id="sidebar"> <!-- Sidebar -->

<div id="linkpool" > <!-- Links to main pages, id=linkpool-->
<table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#880000" href="#doc">Main pages</a></h3></div>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./install.html">Install</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./configuration.html">Configuration</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-search.html">RESTful API : Search</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-insert-update-delete.html">RESTful API : Insert/Update/Delete</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-control.html">RESTful API : Control</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./geo.html">GEO Search</a></br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./ranking.html">Ranking</a></br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./mongodb.html">MongoDB Search</a></br><br>
</td></tr></tbody></table>
<span ><a  href="http://www.srch2.com" target="_blankt"><img  style="width:100px" src="images/logo.png" /></a></span></br></br>
</div> <!-- Links to main pages, id=linkpool-->
<hr/>
<div id="content" > <!-- Table of content, id=content-->
<table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#880000" href="#doc">Content</a></h3></div>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="#apiinsert">1. API related to insert/delete/update</a><br><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp<a style="text-decoration: none;color:#3366FF" href="#insert">1.1. Insert</a><br><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp<a style="text-decoration: none;color:#3366FF" href="#update">1.2. Update</a><br><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp&nbsp;&nbsp;&nbsp<a style="text-decoration: none;color:#3366FF" href="#delete">1.3. Delete</a><br><br>

</td></tr></tbody></table>

</div> <!-- Table of content, id=content-->
</div> <!-- Sidebar -->

</td>

<td id="docBody" style="width:70%">
</br>
<div><table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#880000" href="#doc"></a></h3></div>

</td></tr></tbody></table></div>
#<center>SRCH2 Documentation: RESTful API - Insert/Update/Delete</center>#{id="doc" style="color:#880000" }
######<center>Version: 4.0, Date: September 19, 2013</center>{id="versionInfo" style="font-size: 12px; margin-top: -20px;"}

##1. API related to insert/delete/update##{id="apiinsert"}
>   Documents can be inserted into and deleted from the index. A unique identifier must be provided for each document. This identifier will be used in the search results to reference the matching document. Every field defined in the indexed document will be searchable.


>   The engine has a background thread to periodically merge the inserted/deleted/updated documents into the index, based on parameters (time interval or number of requests) specified in the "config.ini" file.

###1.1. Insert### {id="insert"}
>   This request adds a document to the index. The request body should contain a JSON object, which should meet the following requirements:

>   *   The JSON object should include a document identifier (e.g., "id"), which should be a non-empty string no longer than 1024 bytes;
>   *   The JSON object should include searchable fields defined in the configuration file "config.ini" and their corresponding values;
>   *   If the engine is using a geo index, the JSON object should include a location specified by a latitude and a longitude.
>   *   The sum of the length of each field value cannot be greater than 100 kilobytes.


>   Example for a "Keyword search" (Option 1) index: 
```python
$ curl "http://localhost:8081/docs" -i -X PUT -d '{"id":"1234", "name":"Toy Story", "category":"shop"}'
```

>  Example for a "Keyword+Geo" (Option 2) index: 
```python
$ curl "http://localhost:8081/docs" -i -X PUT -d '{"id":"1234", "name":"Toy Story", "category":"shop", "lat": 43.22, "lng": -80.22}'
```

###1.2. Update### {id="update"}
>   This request updates a document in the index. It needs to provide the "id" of the document to be updated. The request body should contain a JSON object, which should meet the following requirements:

>   *   The JSON object should include a document identifier (e.g., "id"), which should be a non-empty string no longer than 1024 bytes;
>   *   The JSON object should include searchable fields defined in the configuration file "config.ini" and their corresponding values;
>   *   If the engine is using a geo index, the JSON object should include a location specified by a latitude and a longitude;
>   *   The sum of the length of each field value cannot be greater than 100 kilobytes;
>   *   The "id" in the query url needs to be consistent with the "id" in the JSON object.

>   Example for a "Keyword search" (Option 1) index: 
```python
$ curl "http://localhost:8081/update?id=123" -i -X PUT -d '{"id":"123","name":"Brave", "category":"shop"}'
```

>   Example for a "Keyword+Geo" (Option 2) index:
```python
$ curl "http://localhost:8081/update?id=123" -i -X PUT -d '{"id":"123","name":"Brave", "category":"shop", "latitude": 43.22, "longitude":
 -80.22}'
```


###1.3. Delete### {id="delete"}
>   This request deletes a document from the index. It needs to provide the "id" of the document to be deleted.
>   For clients that do not support body in DELETE requests, the "id" can be sent in the query string one time per document.

>   Example: 
```python
$ curl "http://localhost:8081/docs?id=1234" -i -X DELETE
```





<hr/>
Have fun SRCHing!



<link rel="stylesheet" type="text/css" href="documentation.css">



<script type="text/javascript" src="setSizes.js"></script>
<script>

setSizes();
window.onresize = setSizes
</script>
