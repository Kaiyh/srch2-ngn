
<table style="width:100%;table-layout:fixed" ><tr>
	
<td id="sideBarTd" style="width:25%"> 

<div id="sidebar"> <!-- Sidebar -->

<div id="linkpool" > <!-- Links to main pages, id=linkpool-->
<table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#ee2e24" href="./main.html">Main pages</a></h3></div>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./install.html">Install</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./configuration.html">Configuration</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-search.html">RESTful API : Search</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-insert-update-delete.html">RESTful API : Insert/Update/Delete</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./restful-control.html">RESTful API : Control</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./geo.html">Geo Search</a></br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./ranking.html">Ranking</a></br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="./mongodb.html">MongoDB Search</a></br><br>
</td></tr></tbody></table>
<span ><a  href="http://www.srch2.com" target="_blankt"><img  style="width:100px" src="images/logo.png" /></a></span></br></br>
</div> <!-- Links to main pages, id=linkpool-->
<hr/>
<div id="content" > <!-- Table of content, id=content-->
<table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#ee2e24" href="#doc">Content</a></h3></div>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="#insert">1. Insert</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="#delete">2. Delete</a><br><br>
&nbsp;&nbsp;&nbsp;<a style="text-decoration: none;color:#3366FF" href="#update">3. Update</a><br><br>

</td></tr></tbody></table>

</div> <!-- Table of content, id=content-->
</div> <!-- Sidebar -->

</td>

<td id="docBody" style="width:70%">
</br>
<div><table><tbody><tr><td>
<div><h3><a style="text-decoration: none;color:#ee2e24" href="#doc"></a></h3></div>

</td></tr></tbody></table></div>

#<center>SRCH2 Manual: RESTful API - Insert/Delete/Update</center>#{id="doc" style="color:#ee2e24" }
######<center>Version: 4.0.0, Date: September 19, 2013</center>{id="versionInfo" style="font-size: 12px; margin-top: -20px;"}

Using the RESTful API of the SRCH2 engine, a user can send requests to insert new records, delete existing records, and update existing records.  The engine has a background thread that periodically merges the inserted/deleted/updated records into the indexes, based on two parameters specified in the configuration file, namely "mergeEveryNSeconds" (time interval) and "mergeEveryMWrites" (number of requests) .

###1. Insert### {id="insert"}

This request adds a record to the indexes. The request body should contain a JSON object, which should meet the following requirements:

 - The JSON object should include a record identifier (e.g., "id"), which should be a non-empty string no longer than 1024 bytes;
 - The JSON object should include searchable fields defined in the configuration file and their corresponding values;
 - If the engine is doing geo indexing, the JSON object should include a location specified by a latitude and a longitude;
 - The sum of the length of each field value cannot be greater than 100 kilobytes.

Here is an example:

```python
$ curl "http://localhost:8081/docs" -i -X PUT -d '{"id" : "1234", "name" : "Toy Story", "category" : "shop"}'
```

###2. Delete### {id="delete"}

This request deletes a record from the indexes. It needs to provide the "id" of the record to be deleted. For clients that do not support body in DELETE requests, the "id" can be sent in the query string one time per record.

Here is an example: 
```python
$ curl "http://localhost:8081/docs?id=1234" -i -X DELETE
```

###3. Update### {id="update"}

This request updates a record in the indexes. It needs to provide the "id" of the record to be updated. The request body should contain a JSON object, which should meet the following requirements:

 - The JSON object should include a record identifier (e.g., "id"), which should be a non-empty string no longer than 1024 bytes;
 - The JSON object should include searchable fields defined in the configuration file and their corresponding values;
 - If the engine is doing geo indexing, the JSON object should include a location specified by a latitude and a longitude;
 - The sum of the length of each field value cannot be greater than 100 kilobytes;
 - The "id" in the query URL needs to be consistent with the "id" in the JSON object.

Here is an example query: 

```python
$ curl "http://localhost:8081/update?id=123" -i -X PUT -d '{"id":"123","name":"Brave", "category":"shop"}'
```
<hr/>
Have fun SRCHing!



<link rel="stylesheet" type="text/css" href="documentation.css">



<script type="text/javascript" src="setSizes.js"></script>
<script>

setSizes();
window.onresize = setSizes
</script>
